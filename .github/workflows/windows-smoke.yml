name: Windows Smoke Build

on:
  workflow_dispatch:

jobs:
  windows-smoke:
    runs-on: windows-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup sccache (retry)
        continue-on-error: true
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          function Invoke-With-Retry { param([scriptblock]$Script, [int]$Retries = 3, [int]$DelaySeconds = 15)
            for ($i = 1; $i -le $Retries; $i++) {
              try { & $Script; if ($LASTEXITCODE -ne $null -and $LASTEXITCODE -ne 0) { throw "Exit $LASTEXITCODE" }; return }
              catch { if ($i -eq $Retries) { throw }; Write-Warning ("Attempt $i failed: $($_.Exception.Message). Retrying in ${DelaySeconds}s..."); Start-Sleep -Seconds $DelaySeconds }
            }
          }
          if (Get-Command winget -ErrorAction SilentlyContinue) {
            Invoke-With-Retry { winget install --id Mozilla.sccache --silent --accept-package-agreements --accept-source-agreements }
          } else {
            Invoke-With-Retry { choco install sccache --yes --no-progress --execution-timeout=3600 }
          }
          $env:SCCACHE_DIR = "$env:RUNNER_TEMP\sccache"
          New-Item -ItemType Directory -Force -Path $env:SCCACHE_DIR | Out-Null
          Add-Content -Path $env:GITHUB_ENV -Value "RUSTC_WRAPPER=sccache"
          Add-Content -Path $env:GITHUB_ENV -Value "SCCACHE_DIR=$env:SCCACHE_DIR"
          Add-Content -Path $env:GITHUB_ENV -Value "SCCACHE_CACHE_SIZE=2G"
          if (Get-Command sccache -ErrorAction SilentlyContinue) { sccache --version } else { Write-Warning "sccache not found; continuing without it" }

      - name: Build pea-agent (Windows)
        working-directory: pea-agent
        run: cargo build --release --locked

      - name: Install GPG (Windows)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          function Invoke-With-Retry { param([scriptblock]$Script, [int]$Retries = 3, [int]$DelaySeconds = 15)
            for ($i = 1; $i -le $Retries; $i++) {
              try { & $Script; if ($LASTEXITCODE -ne $null -and $LASTEXITCODE -ne 0) { throw "Exit $LASTEXITCODE" }; return }
              catch { if ($i -eq $Retries) { throw }; Write-Warning ("Attempt $i failed: $($_.Exception.Message). Retrying in ${DelaySeconds}s..."); Start-Sleep -Seconds $DelaySeconds }
            }
          }
          if (Get-Command winget -ErrorAction SilentlyContinue) {
            Invoke-With-Retry { winget install --id GnuPG.GnuPG --silent --accept-package-agreements --accept-source-agreements }
          } else {
            Invoke-With-Retry { choco install gnupg --yes --no-progress --execution-timeout=5400 }
          }
          $gpgPath = 'C:\\Program Files\\GnuPG\\bin'
          if (Test-Path $gpgPath) { $env:PATH = "$env:PATH;$gpgPath" }
          gpg --version

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: pea-agent-windows-smoke
          path: pea-agent/target/release/pea-agent.exe
