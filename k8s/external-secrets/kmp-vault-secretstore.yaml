# ====================================
# KMP SUPPLY CHAIN - VAULT SECRET STORE
# Configuration for External Secrets to access Vault
# ====================================

# Service Account for KMP applications to access Vault
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kmp-vault-auth
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-vault-auth
    app.kubernetes.io/component: secrets

---
# SecretStore pointing to Vault for KMP secrets
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: kmp-vault-store
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-vault-store
    app.kubernetes.io/component: secrets
spec:
  provider:
    vault:
      server: "http://kmp-supply-chain-vault-alb:8200"
      path: "kmp-secrets"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "kmp-api-role"
          serviceAccountRef:
            name: "kmp-vault-auth"

---
# External Secret for Database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kmp-database-secret
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-database-secret
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: kmp-vault-store
    kind: SecretStore
  target:
    name: kmp-database-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        database-url: "postgresql://{{ .username }}:{{ .password }}@kmp-postgres:5432/kmp_supply_chain"
        username: "{{ .username }}"
        password: "{{ .password }}"
  data:
  - secretKey: username
    remoteRef:
      key: database
      property: username
  - secretKey: password
    remoteRef:
      key: database
      property: password

---
# External Secret for JWT tokens
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kmp-jwt-secret
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-jwt-secret
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: kmp-vault-store
    kind: SecretStore
  target:
    name: kmp-jwt-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        jwt-secret: "{{ .secret }}"
  data:
  - secretKey: secret
    remoteRef:
      key: jwt
      property: secret

---
# External Secret for Blockchain wallet
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kmp-blockchain-secret
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-blockchain-secret
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: kmp-vault-store
    kind: SecretStore
  target:
    name: kmp-blockchain-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        mnemonic: "{{ .mnemonic }}"
        address: "{{ .address }}"
  data:
  - secretKey: mnemonic
    remoteRef:
      key: blockchain
      property: mnemonic
  - secretKey: address
    remoteRef:
      key: blockchain
      property: address

---
# External Secret for API credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kmp-api-secret
  namespace: kmp-supply-chain
  labels:
    app.kubernetes.io/name: kmp-api-secret
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: kmp-vault-store
    kind: SecretStore
  target:
    name: kmp-api-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        admin-password: "{{ .admin_password }}"
        monitoring-password: "{{ .monitoring_password }}"
  data:
  - secretKey: admin_password
    remoteRef:
      key: api
      property: admin_password
  - secretKey: monitoring_password
    remoteRef:
      key: api
      property: monitoring_password

---
# ClusterSecretStore (optional) for cross-namespace access
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: kmp-vault-cluster-store
  labels:
    app.kubernetes.io/name: kmp-vault-cluster-store
    app.kubernetes.io/component: secrets
spec:
  provider:
    vault:
      server: "http://kmp-supply-chain-vault-alb:8200"
      path: "kmp-secrets"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "kmp-api-role"
          serviceAccountRef:
            name: "kmp-vault-auth"
            namespace: "kmp-supply-chain" 