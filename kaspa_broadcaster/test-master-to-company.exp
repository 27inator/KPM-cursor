#!/usr/bin/expect -f

set timeout 120
set kaspa_cli "../rusty-kaspa/target/release/kaspa-cli"
set master_mnemonic "arrest acid fall interest comfort expire aunt combine actor tackle stove coral"

# CONFIRMED real master wallet 
set master_address "kaspatest:qpxm5tpyg8p6z7f6hy9mtlwz2es03cqtavaldsctcdltmnz6yfz6gvurgpmem"

# Use a test company address (we can create this manually later)
set company_address "kaspatest:qzyqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqhd"
set test_amount "0.001"

log_user 1

puts "🔥 MASTER → COMPANY TRANSACTION TEST"
puts "==================================="
puts "Master: $master_address (CONFIRMED REAL)"
puts "Company: $company_address"
puts "Amount: $test_amount KAS"
puts ""

spawn $kaspa_cli
expect "$ "

puts "📝 Importing confirmed master wallet..."
send "wallet import --testnet-10\r"

expect {
    "Enter mnemonic:" {
        send "$master_mnemonic\r"
        puts "✅ Mnemonic entered"
    }
    "Create phishing hint" {
        send "\r"
        expect "Enter mnemonic:"
        send "$master_mnemonic\r"
        puts "✅ Mnemonic entered after hint"
    }
    timeout {
        puts "❌ Failed to get mnemonic prompt"
        exit 1
    }
}

expect {
    "Create phishing hint" {
        send "\r"
        puts "✅ Phishing hint skipped"
    }
    "$ " {
        puts "✅ Wallet imported"
    }
    timeout {
        puts "❌ Import timeout"
        exit 1
    }
}

expect "$ "

puts "📍 Verifying master address..."
send "wallet address --testnet-10\r"
expect "$ "

puts "💰 Checking master balance..."
send "wallet balance --testnet-10\r"
expect "$ "

puts "🚀 SENDING TRANSACTION..."
puts "From: $master_address"
puts "To: $company_address"
puts "Amount: $test_amount KAS"

send "wallet send --testnet-10 --to $company_address --amount $test_amount\r"

expect {
    -re "Transaction.*(sent|submitted|completed)" {
        puts "✅ TRANSACTION SUCCESS!"
        set success 1
    }
    -re "Transaction.*(ID|Hash).*: (\[a-f0-9\]+)" {
        puts "✅ TRANSACTION ID: $expect_out(2,string)"
        set tx_id $expect_out(2,string)
        set success 1
    }
    -re "(insufficient|not enough|balance)" {
        puts "💸 INSUFFICIENT FUNDS - Master wallet needs funding"
        puts "🌐 Fund at: https://faucet-tn10.kaspa.org"
        puts "📍 Address: $master_address"
        set success 0
    }
    -re "(Error|Failed|Invalid)" {
        puts "❌ TRANSACTION FAILED: $expect_out(0,string)"
        set success 0
    }
    timeout {
        puts "❌ TRANSACTION TIMEOUT"
        set success 0
    }
}

expect "$ "
send "exit\r"
expect eof

puts ""
if {$success == 1} {
    puts "🎉 MASTER → COMPANY TRANSACTION SUCCESSFUL!"
    if {[info exists tx_id]} {
        puts "🌐 Explorer: https://explorer-tn10.kaspa.org/txs/$tx_id"
        
        # Save success
        set fp [open "master_company_tx_success.txt" w]
        puts $fp "MASTER → COMPANY SUCCESS"
        puts $fp "======================="
        puts $fp "Master: $master_address"
        puts $fp "Company: $company_address"  
        puts $fp "Amount: $test_amount KAS"
        puts $fp "TX ID: $tx_id"
        puts $fp "Explorer: https://explorer-tn10.kaspa.org/txs/$tx_id"
        close $fp
    }
    puts "✅ CORE PLUMBING WORKS!"
} else {
    puts "❌ TRANSACTION FAILED"
    exit 1
} 