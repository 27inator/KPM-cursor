#!/usr/bin/expect -f

set timeout 60
set kaspa_cli "../rusty-kaspa/target/release/kaspa-cli"

log_user 1

# Function to generate secure random password
proc generate_secure_password {length} {
    set chars "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*"
    set password ""
    for {set i 0} {$i < $length} {incr i} {
        set rand_index [expr {int(rand() * [string length $chars])}]
        append password [string index $chars $rand_index]
    }
    return $password
}

proc create_secure_company_wallet {company_name} {
    global kaspa_cli
    
    puts "🏢 Creating SECURE wallet for: $company_name"
    
    # Generate unique secure password for this company
    set encryption_password [generate_secure_password 24]
    puts "   🔐 Generated unique encryption password: [string range $encryption_password 0 8]..."
    
    spawn $kaspa_cli
    expect "$ "
    
    send "wallet create --testnet-10\r"
    
    # 1. Account title
    expect "Default account title:"
    send "$company_name\r"
    puts "   📝 Account title: $company_name"
    
    # 2. Phishing hint (skip)
    expect "Create phishing hint (optional, press <enter> to skip):"
    send "\r"
    puts "   🛡️  Phishing hint: skipped"
    
    # 3. Encryption password (UNIQUE per company)
    expect "Enter wallet encryption password:"
    send "$encryption_password\r"
    puts "   🔐 Encryption password: UNIQUE & SECURE"
    
    # 4. Confirm password
    expect {
        "Confirm wallet encryption password:" {
            send "$encryption_password\r"
            puts "   ✅ Password confirmed"
        }
        timeout {
            puts "   ⚠️  No password confirmation"
        }
    }
    
    # 5. Capture kaspa-cli GENERATED mnemonic
    puts "   🔑 Capturing kaspa-cli generated mnemonic..."
    set mnemonic ""
    expect {
        -re "Your mnemonic phrase: (.+)" {
            set mnemonic [string trim $expect_out(1,string)]
            puts "   ✅ Mnemonic captured from kaspa-cli"
        }
        -re "Mnemonic phrase: (.+)" {
            set mnemonic [string trim $expect_out(1,string)]
            puts "   ✅ Mnemonic captured from kaspa-cli"
        }
        -re "\n(\[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+ \[a-z\]+.*)\n" {
            set mnemonic [string trim $expect_out(1,string)]
            puts "   ✅ Mnemonic pattern captured: [string range $mnemonic 0 30]..."
        }
        timeout {
            puts "   ❌ Failed to capture mnemonic"
            send "exit\r"
            expect eof
            return ""
        }
    }
    
    # 6. Get address
    expect "$ "
    send "wallet address --testnet-10\r"
    
    set address ""
    expect {
        -re "(kaspatest:\[a-z0-9\]+)" {
            set address $expect_out(1,string)
            puts "   📍 Address: $address"
        }
        timeout {
            puts "   ❌ Failed to get address"
        }
    }
    
    expect "$ "
    send "exit\r"
    expect eof
    
    if {$address != "" && $mnemonic != ""} {
        puts "   🎉 SUCCESS: $company_name secure wallet created!"
        puts "   🌐 Explorer: https://explorer-tn10.kaspa.org/addresses/$address"
        return "$company_name|$address|$mnemonic|$encryption_password"
    } else {
        puts "   ❌ FAILED: Missing data"
        return ""
    }
}

puts "🔒 SECURE COMPANY WALLET GENERATOR"
puts "=================================="
puts "✅ kaspa-cli generates mnemonic automatically"
puts "✅ Unique encryption password per company"
puts "✅ Proper security isolation"
puts ""

# Test with one company first
set result [create_secure_company_wallet "secure-test-company"]

if {$result != ""} {
    puts ""
    puts "🎉 SECURE WALLET GENERATION SUCCESS!"
    
    # Parse result
    set parts [split $result "|"]
    set company [lindex $parts 0]
    set address [lindex $parts 1] 
    set mnemonic [lindex $parts 2]
    set password [lindex $parts 3]
    
    puts "📊 SECURITY SUMMARY:"
    puts "   Company: $company"
    puts "   Address: $address"
    puts "   Mnemonic: kaspa-cli generated ([llength [split $mnemonic " "]] words)"
    puts "   Password: Unique 24-char secure ([string length $password] chars)"
    
    # Save securely
    set fp [open "secure_wallet_result.txt" w]
    puts $fp "SECURE WALLET GENERATION"
    puts $fp "======================="
    puts $fp "Company: $company"
    puts $fp "Address: $address"
    puts $fp "Mnemonic: $mnemonic"
    puts $fp "Password: $password"
    puts $fp "Explorer: https://explorer-tn10.kaspa.org/addresses/$address"
    puts $fp ""
    puts $fp "SECURITY:"
    puts $fp "- Mnemonic: Generated by kaspa-cli (cryptographically secure)"
    puts $fp "- Password: Unique 24-character random (per company)"
    puts $fp "- Isolation: Complete (no shared secrets)"
    close $fp
    
    puts "💾 Secure data saved to: secure_wallet_result.txt"
    puts ""
    puts "🚀 READY TO CREATE MULTIPLE SECURE COMPANY WALLETS!"
} else {
    puts ""
    puts "❌ SECURE WALLET TEST FAILED"
} 