#!/usr/bin/expect -f

set timeout 120
set kaspa_cli "../rusty-kaspa/target/release/kaspa-cli"
set master_mnemonic "arrest acid fall interest comfort expire aunt combine actor tackle stove coral"

# CONFIRMED master wallet
set master_address "kaspatest:qpxm5tpyg8p6z7f6hy9mtlwz2es03cqtavaldsctcdltmnz6yfz6gvurgpmem"

# NEWLY CREATED company wallet
set company_address "kaspatest:qplvd467p4r0nu0ddaa6hmca6de028qj6wz3xpvrr4und0xasghwjus2rg6rc"
set company_name "manual-test-company"

set test_amount "0.01"
set supply_chain_event "MANUAL-TEST-[clock seconds]"

log_user 1

puts "🔥 MASTER → COMPANY TRANSACTION TEST"
puts "===================================="
puts "TESTING CORE BLOCKCHAIN ANCHORING!"
puts ""
puts "📍 FROM: $master_address"
puts "📍 TO:   $company_address"
puts "🏢 Company: $company_name"
puts "💰 Amount: $test_amount KAS"
puts "📦 Event: $supply_chain_event"
puts ""

spawn $kaspa_cli
expect "$ "

puts "🔑 Importing master wallet..."
send "wallet import --testnet-10\r"

expect {
    "Enter mnemonic:" {
        send "$master_mnemonic\r"
        puts "✅ Master mnemonic entered"
    }
    "Create phishing hint" {
        send "\r"
        expect "Enter mnemonic:"
        send "$master_mnemonic\r"
        puts "✅ Master mnemonic entered after hint"
    }
    timeout {
        puts "❌ No mnemonic prompt"
        exit 1
    }
}

expect {
    "Create phishing hint" {
        send "\r"
        puts "✅ Phishing hint skipped"
    }
    "$ " {
        puts "✅ Master wallet imported"
    }
    timeout {
        puts "❌ Import failed"
        exit 1
    }
}

expect "$ "

puts "📍 Verifying master address..."
send "wallet address --testnet-10\r"
expect "$ "

puts "💰 Checking master balance..."
send "wallet balance --testnet-10\r"
expect "$ "

puts ""
puts "🚀 SENDING BLOCKCHAIN TRANSACTION!"
puts "=================================="
puts "This proves real supply chain anchoring works!"

send "wallet send --testnet-10 --to $company_address --amount $test_amount\r"

set tx_success 0
set tx_id ""

expect {
    -re "Transaction.*(sent|submitted|completed)" {
        puts "✅ TRANSACTION SUCCESSFUL!"
        set tx_success 1
    }
    -re "Transaction.*(ID|Hash).*: (\[a-f0-9\]+)" {
        set tx_id $expect_out(2,string)
        puts "✅ TRANSACTION ID: $tx_id"
        set tx_success 1
    }
    -re "(insufficient|not enough|balance)" {
        puts "💸 INSUFFICIENT FUNDS in master wallet"
        puts "🎯 SOLUTION: Fund master wallet at faucet"
        puts "🌐 Master: https://explorer-tn10.kaspa.org/addresses/$master_address"
        puts "💰 Faucet: https://faucet-tn10.kaspa.org"
        set tx_success 0
    }
    -re "(Error|Failed|Invalid)" {
        puts "❌ TRANSACTION FAILED: $expect_out(0,string)"
        set tx_success 0
    }
    timeout {
        puts "⏱️  TRANSACTION TIMEOUT"
        set tx_success 0
    }
}

expect "$ "
send "exit\r"
expect eof

puts ""
puts "========================================"
if {$tx_success == 1} {
    puts "🎉 BLOCKCHAIN ANCHORING SUCCESS!"
    puts "==============================="
    
    if {$tx_id != ""} {
        puts "✅ Transaction ID: $tx_id"
        puts "🌐 EXPLORER: https://explorer-tn10.kaspa.org/txs/$tx_id"
    }
    
    puts ""
    puts "📍 VERIFY ON BLOCKCHAIN:"
    puts "Master:  https://explorer-tn10.kaspa.org/addresses/$master_address"
    puts "Company: https://explorer-tn10.kaspa.org/addresses/$company_address"
    
    # Save success
    set fp [open "blockchain_anchoring_success.txt" w]
    puts $fp "BLOCKCHAIN ANCHORING SUCCESS!"
    puts $fp "============================"
    puts $fp "Event: $supply_chain_event"
    puts $fp "Master: $master_address"
    puts $fp "Company: $company_address ($company_name)"
    puts $fp "Amount: $test_amount KAS"
    if {$tx_id != ""} {
        puts $fp "TX ID: $tx_id"
        puts $fp "Explorer: https://explorer-tn10.kaspa.org/txs/$tx_id"
    }
    puts $fp ""
    puts $fp "BLOCKCHAIN VERIFICATION:"
    puts $fp "Master Explorer:  https://explorer-tn10.kaspa.org/addresses/$master_address"
    puts $fp "Company Explorer: https://explorer-tn10.kaspa.org/addresses/$company_address"
    puts $fp ""
    puts $fp "✅ CORE PLUMBING WORKS!"
    puts $fp "✅ Real blockchain transactions: CONFIRMED"
    puts $fp "✅ Master → Company flow: WORKING"
    puts $fp "✅ Supply chain anchoring: PROVEN"
    close $fp
    
    puts ""
    puts "🚀 CORE FUNCTIONALITY PROVEN!"
    puts "✅ Real blockchain transactions work"
    puts "✅ Master → Company flow verified"
    puts "✅ Explorer verification possible"
    puts "✅ Supply chain anchoring ready"
    puts ""
    puts "💾 Results: blockchain_anchoring_success.txt"
    
} else {
    puts "❌ BLOCKCHAIN ANCHORING FAILED"
    puts "🔧 Need to resolve transaction issues"
    
    if {[string match "*insufficient*" $expect_out(0,string)]} {
        puts ""
        puts "💡 NEXT STEP: Fund the master wallet"
        puts "🌐 Master: https://explorer-tn10.kaspa.org/addresses/$master_address"
        puts "💰 Faucet: https://faucet-tn10.kaspa.org"
    }
    
    exit 1
}

puts "========================================" 